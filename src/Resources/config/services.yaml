services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    Content\Command\BuildCommand:
        arguments: ['@Content\Builder']
        tags: [{ name: console.command, command: content:build }]

    Content\Builder\PageList: ~
    Content\Builder\Sitemap: ~

    Content\Decoder\MarkdownDecoder: ~
    Content\Decoder\YamlDecoder: ~

    Content\EventListener\Informator: ~
    Content\EventListener\SitemapListener: ~

    Content\Highlighter\Pygments: ~
    Content\Highlighter\Prism: ~

    Content\Decoder\HtmlDecoder:
        $highlighter: '@Content\Highlighter\Prism'

    Content\Service\Parsedown:
        $highlighter: '@Content\Highlighter\Prism'

    Content\PropertyHandler\LastModifiedPropertyHandler:
        tags:
            - { name: 'content.property_handler', property: 'lastModified' }

    Content\PropertyHandler\SlugPropertyHandler:
        tags:
            - { name: 'content.property_handler', property: 'slug' }

    Content\PropertyHandler\TitlesPropertyHandler:
        tags:
            - { name: 'content.property_handler', property: 'content' }

    # Decorators
    Content\Routing\UrlGenerator:
        decorates: Symfony\Component\Routing\Generator\UrlGeneratorInterface

    # Builder
    Content\Builder:
        arguments:
            $httpKernel: '@kernel'
            $buildDir: !abstract The build dir, defined by the extension
            $filesToCopy: !abstract The files to copy after build, defined by the extension
            $logger: '@?logger'

    # Content Manager
    Content\ContentManager:
        autowire: false
        arguments:
            $path: !abstract The content dir, defined by the extension
            $serializer: '@serializer'
            $propertyAccessor: '@property_accessor'
            $contentProviders: !tagged_iterator 'content.content_provider'
            $propertyHandlers: !tagged_iterator { tag: 'content.property_handler', index_by: 'property' }
