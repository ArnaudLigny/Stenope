services:

    Content\Command\BuildCommand:
        arguments:
            $builder: '@Content\Builder'
        tags: [{ name: console.command, command: content:build }]

    Content\Builder\PageList: ~
    Content\Builder\Sitemap: ~

    Content\Decoder\MarkdownDecoder:
        arguments:
            $parser: '@Content\Service\Parsedown'
        tags: [serializer.encoder]

    Content\Decoder\HtmlDecoder:
        arguments:
            $highlighter: '@Content\Highlighter\Prism'
        tags: [serializer.encoder]

    Content\EventListener\Informator:
        arguments:
            $urlGenerator: '@Symfony\Component\Routing\Generator\UrlGeneratorInterface'
            $twig: '@twig'
        tags: [kernel.event_subscriber]

    Content\EventListener\SitemapListener:
        arguments:
            $router: '@router'
            $sitemap: '@Content\Builder\Sitemap'
        tags: [kernel.event_subscriber]

    Content\Highlighter\Pygments: ~
    Content\Highlighter\Prism: ~

    Content\Service\Parsedown:
        $highlighter: '@Content\Highlighter\Prism'

    Content\PropertyHandler\LastModifiedPropertyHandler:
        tags: [{ name: 'content.property_handler', property: 'lastModified' }]

    Content\PropertyHandler\SlugPropertyHandler:
        tags: [{ name: 'content.property_handler', property: 'slug' }]

    Content\PropertyHandler\TitlesPropertyHandler:
        tags: [{ name: 'content.property_handler', property: 'content' }]

    # Decorators
    Content\Routing\UrlGenerator:
        decorates: Symfony\Component\Routing\Generator\UrlGeneratorInterface
        arguments:
            $urlGenerator: '@Content\Routing\UrlGenerator.inner'
            $pageList: '@Content\Builder\PageList'

    # Builder
    Content\Builder:
        $router: '@router'
        $httpKernel: '@kernel'
        $templating: '@twig'
        $pageList: '@Content\Builder\PageList'
        $sitemap: '@Content\Builder\Sitemap'
        $buildDir: !abstract The build dir, defined by the extension
        $filesToCopy: !abstract The files to copy after build, defined by the extension
        $logger: '@?logger'

    # Content Manager
    Content\ContentManager:
        $decoder: '@serializer'
        $denormalizer: '@serializer'
        $propertyAccessor: '@property_accessor'
        $contentProviders: !tagged_iterator 'content.content_provider'
        $propertyHandlers: !tagged_iterator { tag: 'content.property_handler', index_by: 'property' }

    Content\Provider\Factory\ContentProviderFactory:
        $factories: !tagged_iterator 'content.content_provider_factory'

    Content\Provider\Factory\LocalFilesystemProviderFactory:
        tags: ['content.content_provider_factory']

    Content\HttpKernel\Controller\ArgumentResolver\ContentArgumentResolver:
        arguments:
            $contentManager: '@Content\ContentManager'
        tags:
            - name: controller.argument_value_resolver
              priority: 110 # Prior RequestAttributeValueResolver to resolve from route attribute
