name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  integration:
    name: Integration
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: [ '7.4' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          extensions: "json"
          ini-values: "memory_limit=-1"
          php-version: "${{ matrix.php }}"

      - name: Determine composer cache directory
        id: composer-cache
        run: echo "::set-output name=directory::$(composer config cache-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: Install dependencies
        id: deps
        run: |
          echo "::group::composer update"
          composer update --no-progress --ansi
          echo "::endgroup::"

          echo "::group::install phpunit"
          vendor/bin/simple-phpunit install
          echo "::endgroup::"

      - name: 'Composer validate'
        if: always() && steps.deps.outcome == 'success'
        run: composer validate --strict

      - name: 'PHP CS Fixer'
        if: always() && steps.deps.outcome == 'success'
        run: vendor/bin/php-cs-fixer fix --dry-run --diff

      - name: 'PhpStan'
        if: always() && steps.deps.outcome == 'success'
        run: vendor/bin/phpstan analyse

      - name: 'Lint YAML'
        if: always() && steps.deps.outcome == 'success'
        run: bin/lint.yaml.php --parse-tags src/Resources/config

      - name: 'Lint Twig'
        if: always() && steps.deps.outcome == 'success'
        run: bin/lint.twig.php src/Resources/views

      - name: Run tests
        run: vendor/bin/simple-phpunit --testdox
